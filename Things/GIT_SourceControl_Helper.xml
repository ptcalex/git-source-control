<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="1"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="GIT_SourceControl_Helper"
         projectName="GIT_SourceControl_PJ"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="JSON"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Projects"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="GIT_Repository_FR"
                     aspect.isPersistent="true"
                     aspect.thingTemplate="FileRepository"
                     baseType="THINGNAME"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Repository"
                     ordinal="2"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="GIT"
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Export">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="PROJECTNAME"
                             description=""
                             name="ProjectName"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="GIT"
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Import">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="PROJECTNAME"
                             description=""
                             name="ProjectName"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Export">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        Resources["SourceControlFunctions"].ExportSourceControlledEntities({
                                        	repositoryName: me.Repository,
                                        	path: "/",
                                        	projectName: ProjectName,
                                        	startDate: undefined /* DATETIME */,
                                        	endDate: undefined /* DATETIME */,
                                        	exportMatchingModelTags: undefined /* BOOLEAN */,
                                        	includeDependents: undefined /* BOOLEAN */,
                                        	collection: undefined /* STRING */,
                                        	tags: undefined /* TAGS */
                                        });
                                        
                                        let result = "Project " + ProjectName + " exported for source control " + " to repository " + Repository;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Import">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        Resources["SourceControlFunctions"].ImportSourceControlledEntities({
                                        	repositoryName: me.Repository,
                                        	path: ProjectName,
                                        	useDefaultDataProvider: undefined /* BOOLEAN */,
                                        	withSubsystems: undefined /* BOOLEAN */,
                                        	overwritePropertyValues: undefined /* BOOLEAN */,
                                        	entityFilter: undefined /* INFOTABLE */
                                        });
                                        
                                        let result = "Project " + ProjectName + " imported from source control repository " + Repository;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="Timer"
                     name="ExportOnTimer"
                     source="GIT_ExportTimer_TM"
                     sourceProperty=""
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="ExportOnTimer">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 dataShapeName=""
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if ( me.Repository ) {
                                                let json = JSON.parse( me.Projects );
                                                json.projects.forEach(project => {
                                                    if (Projects[project]) {
                                                        me.Export({ 
                                                            Repository: me.Repository, 
                                                            ProjectName: project 
                                                        });
                                                    }
                                                });
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="Projects"></AlertDefinitions>
                <AlertDefinitions
                 name="Repository"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <Repository>
                    <Value>
                    <![CDATA[
                    GIT_Repository_FR
                    ]]>
                    </Value>
                    <Timestamp>1970-01-01T01:00:00.000+01:00</Timestamp>
                    <Quality>UNKNOWN</Quality>
                </Repository>
                <Projects>
                    <Value>
                        <json>
                        <![CDATA[
                        {"projects":["GIT_SourceControl_PJ"]}
                        ]]>
                        </json>
                    </Value>
                    <Timestamp>2021-04-01T09:13:49.147+02:00</Timestamp>
                    <Quality>GOOD</Quality>
                </Projects>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
